#include "asr.h"
extern "C"{ void * __dso_handle = 0 ;}
#include "setup.h"
#include "myLib/asr_ws2812.h"

uint32_t snid;

void timerSleepProc(TimerHandle_t xTimer);
TimerHandle_t timerSleepHandler = NULL;

TaskHandle_t rainbowProcHandler = NULL;


uint8_t brightNess = 255;
uint8_t volume = 4;

uint8_t R,G,B;


// void app();
void ASR_CODE();

//{speak:小英-高兴,vol:10,speed:12,platform:haohaodada,version:V3}
//{playid:10001,voice:欢迎回来，你叫我艾利尔芬特吧。}
//{playid:10002,voice:我先走啦，有事喊我吧，我随时都在。}

WS2812 ASR_WS2812_13(13);

void timerSleepProc(TimerHandle_t xTimer){
  ASR_WS2812_13.pixel_set_all_color(0,0,0);
  ASR_WS2812_13.pixel_show();
}


// void app(){

//   while (1) {

//     }

//   vTaskDelete(NULL);
// }

void rainbowProc(void* pvParameters)
{
  
  for(;;)
  {
    ASR_WS2812_13.rainbowCycle(100);
    // ASR_WS2812_13.rainbow(100);
    delay(1000);
  }
  
  vTaskDelete(NULL);
}

/*描述该功能...
*/
void ASR_CODE(){
  //本函数是语音识别成功钩子程序
  //运行时间越短越好，复杂控制启动新线程运行
  //唤醒时间设置必须在ASR_CODE中才有效
  set_state_enter_wakeup(20000);
  //用switch分支选择，根据不同的识别成功的ID执行相应动作，点击switch左上齿轮
  //可以增加分支项
  switch (snid) {
   case 1: // 开灯
    R = 248;
    G = 141;
    B = 30;
    ASR_WS2812_13.setBrightness(brightNess);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break;
   case 2: // 红灯
    R = 255;
    G = 0;
    B = 0;
    ASR_WS2812_13.setBrightness(brightNess);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break;
   case 3: // 蓝灯
    R = 0;
    G = 0;
    B = 255;
    ASR_WS2812_13.setBrightness(brightNess);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break;
   case 4: // 绿灯
    R = 0;
    G = 255;
    B = 0;
    ASR_WS2812_13.setBrightness(brightNess);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break;
   case 5: // 黄灯
    R = 248;
    G = 215;
    B = 20;
    ASR_WS2812_13.setBrightness(brightNess);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break;
   case 6: // 白灯
    R = 255;
    G = 255;
    B = 255;
    ASR_WS2812_13.setBrightness(brightNess);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break;
    
   case 7: // 暖光灯
    R = 248;
    G = 141;
    B = 30;
    ASR_WS2812_13.setBrightness(brightNess);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break;
    
   case 8: // 夜灯
    R = 248;
    G = 141;
    B = 30;
    ASR_WS2812_13.setBrightness(10);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break;
    
   case 9: // 关灯
    ASR_WS2812_13.pixel_set_all_color(0,0,0);
    ASR_WS2812_13.pixel_show();
    break;
   
   case 14: // 大声点
    volume += 1;
    volume = volume <= 7 ? volume : 7; 
    vol_set(volume);
    break;
    
   case 15: // 声音大一点
    volume += 1;
    volume = volume <= 7 ? volume : 7; 
    vol_set(volume);
    break;
    
   case 16: // 最大声
    volume = 7;
    vol_set(volume);
    break;
    
   case 17: // 小声点
    volume -= 1;
    volume = volume >= 1 ? volume : 1; 
    vol_set(volume);
    break;
    
   case 18: // 声音小一点
    volume -= 1;
    volume = volume >= 1 ? volume : 1; 
    vol_set(volume);
    break;
    
   case 19: // 最小声
    volume = 1;
    vol_set(volume);
    break;
    
   case 20: // 正常音量
    volume = 4;
    vol_set(volume);
    break;
    
   case 29: // 最高音量
    volume = 7;
    vol_set(volume);
    break;
    
   case 30: // 最低音量
    volume = 1;
    vol_set(volume);
    break;
 
   case 21: // 亮一点
    brightNess += 25;
    brightNess = brightNess >= 255 ? brightNess : 255; 
    ASR_WS2812_13.setBrightness(brightNess);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break;    
    
   case 22: // 暗一点
    brightNess -= 25;
    brightNess = brightNess <= 10 ? brightNess : 10; 
    ASR_WS2812_13.setBrightness(brightNess);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break;    
    
   case 23: // 正常亮度
    brightNess = 128;
    ASR_WS2812_13.setBrightness(brightNess);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break;  
    
   case 24: // 最高亮度
    brightNess = 255;
    ASR_WS2812_13.setBrightness(brightNess);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break;   
    
   case 25: // 最低亮度
    brightNess = 10;
    ASR_WS2812_13.setBrightness(brightNess);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break;   
    
   case 10: // 日出模式
    R = 227;
    G = 171;
    B = 87;
    ASR_WS2812_13.setBrightness(225);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break;   

   case 12: // 阅读模式
    R = 255;
    G = 255;
    B = 255;
    ASR_WS2812_13.setBrightness(200);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break; 
    
   case 11: // 下午茶模式
    R = 248;
    G = 141;
    B = 30;
    ASR_WS2812_13.setBrightness(255);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break; 
    
   case 13: // 睡眠模式
    R = 248;
    G = 141;
    B = 30;
    ASR_WS2812_13.setBrightness(10);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    
    xTimerStart(timerSleepHandler,0);
    break; 
    
   case 28: // 解除定时
    xTimerStop(timerSleepHandler,0);
    break;
    
   case 31: // 彩虹
    vTaskResume(rainbowProcHandler);
    break; 
    
   case 32: // 吃掉彩虹
    vTaskSuspend(rainbowProcHandler);
    
    ASR_WS2812_13.setBrightness(brightNess);
    ASR_WS2812_13.pixel_set_all_color(R,G,B);
    ASR_WS2812_13.pixel_show();
    break; 
  }

}

void hardware_init(){

  volume = 4;
  brightNess = 255;
  vol_set(volume);
  ASR_WS2812_13.pixel_init(30);
  
  
  timerSleepHandler = xTimerCreate("timerSleep", 1000 * 60 * 30, 0, 0, timerSleepProc);
  
  // xTaskCreate(app,"app",128,NULL,4,NULL);
  
  xTaskCreate(rainbowProc,"rainbow",128,NULL,4,&rainbowProcHandler);
  
  vTaskSuspend(rainbowProcHandler);
  
  vTaskDelete(NULL);
}

void setup()
{
  //{ID:0,keyword:"唤醒词",ASR:"柯南同学",ASRTO:"真相永远只有一个！"}
  //{ID:26,keyword:"唤醒词",ASR:"艾利尔芬特",ASRTO:"我在呢，我在呢！"}
  //{ID:27,keyword:"唤醒词",ASR:"小明",ASRTO:"来啦！"}
  //{ID:1,keyword:"命令词",ASR:"开灯",ASRTO:"来咯！"}
  //{ID:2,keyword:"命令词",ASR:"红灯",ASRTO:"好的"}
  //{ID:3,keyword:"命令词",ASR:"蓝灯",ASRTO:"好的"}
  //{ID:4,keyword:"命令词",ASR:"绿灯",ASRTO:"好的"}
  //{ID:5,keyword:"命令词",ASR:"黄灯",ASRTO:"好的"}
  //{ID:6,keyword:"命令词",ASR:"白灯",ASRTO:"好的"}
  //{ID:7,keyword:"命令词",ASR:"暖光灯",ASRTO:"好的，马上执行"}
  //{ID:8,keyword:"命令词",ASR:"夜灯",ASRTO:"好的，马上执行"}
  //{ID:9,keyword:"命令词",ASR:"关灯",ASRTO:"好的，马上执行"}
  //{ID:10,keyword:"命令词",ASR:"日出模式",ASRTO:"好的呢，为您切换日出模式！"}
  //{ID:11,keyword:"命令词",ASR:"下午茶模式",ASRTO:"好的呢，为您切换下午茶模式！"}
  //{ID:12,keyword:"命令词",ASR:"阅读模式",ASRTO:"好的呢，为您切换阅读模式！"}    
  //{ID:13,keyword:"命令词",ASR:"睡眠模式",ASRTO:"好的呢，为您切换睡眠模式！"}  
  //{ID:14,keyword:"命令词",ASR:"大声点",ASRTO:"好的呢！声音调大啦！"}
  //{ID:15,keyword:"命令词",ASR:"声音大一点",ASRTO:"好的呢！声音调大啦！"}
  //{ID:16,keyword:"命令词",ASR:"最大声",ASRTO:"好的呢！声音已调到最大！"}
  //{ID:17,keyword:"命令词",ASR:"小声点",ASRTO:"好的呢！声音调小啦！"}
  //{ID:18,keyword:"命令词",ASR:"声音小一点",ASRTO:"好的呢！声音调小啦！"}
  //{ID:19,keyword:"命令词",ASR:"最小声",ASRTO:"好的呢！声音已调到最小！"}
  //{ID:20,keyword:"命令词",ASR:"正常音量",ASRTO:"好的呢！音量已居中！"}
  //{ID:21,keyword:"命令词",ASR:"亮一点",ASRTO:"好的呢！"}
  //{ID:22,keyword:"命令词",ASR:"暗一点",ASRTO:"好的呢！"}
  //{ID:23,keyword:"命令词",ASR:"正常亮度",ASRTO:"好的呢！"}
  //{ID:24,keyword:"命令词",ASR:"最高亮度",ASRTO:"好的呢！"}
  //{ID:25,keyword:"命令词",ASR:"最低亮度",ASRTO:"好的呢！"}
  //{ID:28,keyword:"命令词",ASR:"解除定时",ASRTO:"好嘞！"}
  //{ID:29,keyword:"命令词",ASR:"最高音量",ASRTO:"好！"}
  //{ID:30,keyword:"命令词",ASR:"最低音量",ASRTO:"好！"}
  //{ID:31,keyword:"命令词",ASR:"彩虹",ASRTO:"好！"}
  //{ID:32,keyword:"命令词",ASR:"吃掉彩虹",ASRTO:"好嘞！遇见彩虹，吃定彩虹！"}
}


/** edittype="asr_procode" */